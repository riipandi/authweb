{% layout 'layouts/site-layout' %}

{% block 'heading' %}
  <div>
    <h1 class="text-3xl font-bold text-white">Password Generator</h1>
    <p class="text-violet-100 mt-2">Generate unique and secure passwords in seconds</p>
  </div>
{% endblock %}

<main class="p-8">
  <div class="max-w-2xl mx-auto space-y-6">
    <!-- Mode Selector -->
    <div class="flex border-b border-gray-200">
      <button onclick="switchMode('single')" id="singleModeBtn"
        class="relative px-6 py-2.5 text-sm font-medium transition-colors w-full">
        Single Password
        <span id="singleModeIndicator" class="absolute bottom-0 left-0 w-full h-0.5 bg-violet-500 transition-opacity"></span>
      </button>
      <button onclick="switchMode('batch')" id="batchModeBtn"
        class="relative px-6 py-2.5 text-sm font-medium transition-colors w-full">
        Batch Generator
        <span id="batchModeIndicator" class="absolute bottom-0 left-0 w-full h-0.5 bg-violet-500 opacity-0 transition-opacity"></span>
      </button>
    </div>

    <!-- Password Output Section -->
    <div class="bg-white rounded-lg border shadow-sm p-4">
      <!-- Single Password Mode -->
      <div id="singleMode">
        <div class="relative">
          <input type="text" id="generatedPassword" readonly
            class="w-full p-3 bg-gray-50 border rounded-md pr-24 font-mono text-base tracking-wider text-center"
            placeholder="Generated password">
          <button onclick="copyPassword()"
            class="absolute right-2 top-1.5 px-3 py-2 bg-violet-500 text-white rounded text-sm hover:bg-violet-600 transition-colors flex items-center space-x-1">
            <svg xmlns="http://www.w3.org/2000/svg" class="size-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3" />
            </svg>
            <span>Copy</span>
          </button>
        </div>
      </div>

      <!-- Batch Password Mode -->
      <div id="batchMode" class="hidden">
        <div class="relative">
          <textarea id="batchPasswords" readonly rows="6"
            class="w-full p-3 bg-gray-50 border rounded-md font-mono text-sm tracking-wider overflow-y-scroll min-h-32"
            placeholder="Generated passwords"></textarea>
          <button onclick="copyBatchPasswords()"
            class="absolute right-5 top-1.5 px-3 py-1.5 bg-violet-500 text-white rounded text-sm hover:bg-violet-600 transition-colors flex items-center space-x-1">
            <svg xmlns="http://www.w3.org/2000/svg" class="size-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3" />
            </svg>
            <span>Copy All</span>
          </button>
        </div>
      </div>
    </div>

    <!-- Options Section -->
    <div class="bg-white rounded-lg border shadow-sm p-4">
      <h2 class="text-base font-semibold mb-4">Password Options</h2>
      <div class="grid gap-6 sm:grid-cols-2">
        <!-- Length & Count Options -->
        <div class="space-y-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1.5">Password Length</label>
            <div class="flex items-center space-x-3">
              <input type="range" id="lengthRange" min="8" max="64" value="16"
                class="w-full h-1.5 bg-gray-200 rounded-lg appearance-none cursor-pointer accent-violet-500">
              <input type="number" id="length" value="16" min="8" max="64"
                class="w-14 p-1 border rounded text-center text-sm">
            </div>
          </div>
          <div id="batchCountContainer" class="hidden">
            <label class="block text-sm font-medium text-gray-700 mb-1.5">Number of Passwords</label>
            <div class="flex items-center space-x-3">
              <input type="range" id="countRange" min="1" max="100" value="5"
                class="w-full h-1.5 bg-gray-200 rounded-lg appearance-none cursor-pointer accent-violet-500">
              <input type="number" id="batchCount" value="5" min="1" max="100"
                class="w-14 p-1 border rounded text-center text-sm">
            </div>
          </div>
        </div>

        <!-- Character Sets -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1.5">Character Sets</label>
          <div class="space-y-2 bg-gray-50 p-3 rounded">
            <label class="flex items-center text-sm">
              <input type="checkbox" id="uppercase" checked class="rounded text-violet-500 focus:ring-violet-500">
              <span class="ml-2">Uppercase (A-Z)</span>
            </label>
            <label class="flex items-center text-sm">
              <input type="checkbox" id="lowercase" checked class="rounded text-violet-500 focus:ring-violet-500">
              <span class="ml-2">Lowercase (a-z)</span>
            </label>
            <label class="flex items-center text-sm">
              <input type="checkbox" id="numbers" checked class="rounded text-violet-500 focus:ring-violet-500">
              <span class="ml-2">Numbers (0-9)</span>
            </label>
            <label class="flex items-center text-sm">
              <input type="checkbox" id="symbols" class="rounded text-violet-500 focus:ring-violet-500">
              <span class="ml-2">Symbols (!@#$%^&*)</span>
            </label>
          </div>
        </div>
      </div>
    </div>

    <!-- Generate Button -->
    <div class="flex justify-center">
      <button onclick="generatePasswords()"
        class="px-6 py-2.5 bg-gradient-to-r from-violet-500 to-fuchsia-500 text-white rounded hover:opacity-90 transition-all duration-200 flex items-center space-x-2 text-sm">
        <svg xmlns="http://www.w3.org/2000/svg" class="size-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
        </svg>
        <span>Generate Password</span>
      </button>
    </div>
  </div>
</main>


{% block 'footerScript' %}
<script>
  let currentMode = 'single';

  // Sync range and number inputs
  document.getElementById('lengthRange').addEventListener('input', (e) => {
    document.getElementById('length').value = e.target.value;
    generatePasswords();
  });

  document.getElementById('length').addEventListener('input', (e) => {
    document.getElementById('lengthRange').value = e.target.value;
    generatePasswords();
  });

  document.getElementById('countRange')?.addEventListener('input', (e) => {
    document.getElementById('batchCount').value = e.target.value;
    generatePasswords();
  });

  document.getElementById('batchCount')?.addEventListener('input', (e) => {
    document.getElementById('countRange').value = e.target.value;
    generatePasswords();
  });

  // Existing JavaScript functions remain the same
  function switchMode(mode) {
    currentMode = mode;

    // Toggle content visibility
    document.getElementById('singleMode').classList.toggle('hidden', mode !== 'single');
    document.getElementById('batchMode').classList.toggle('hidden', mode !== 'batch');
    document.getElementById('batchCountContainer').classList.toggle('hidden', mode !== 'batch');

    // Update tab styles
    const singleBtn = document.getElementById('singleModeBtn');
    const batchBtn = document.getElementById('batchModeBtn');
    const singleIndicator = document.getElementById('singleModeIndicator');
    const batchIndicator = document.getElementById('batchModeIndicator');

    if (mode === 'single') {
      singleBtn.classList.add('text-violet-700');
      singleBtn.classList.remove('text-gray-500');
      singleIndicator.classList.remove('opacity-0');

      batchBtn.classList.add('text-gray-500');
      batchBtn.classList.remove('text-violet-700');
      batchIndicator.classList.add('opacity-0');
    } else {
      batchBtn.classList.add('text-violet-700');
      batchBtn.classList.remove('text-gray-500');
      batchIndicator.classList.remove('opacity-0');

      singleBtn.classList.add('text-gray-500');
      singleBtn.classList.remove('text-violet-700');
      singleIndicator.classList.add('opacity-0');
    }

    generatePasswords();
  }

  function generateSinglePassword() {
    const chars = getCharacterSet();
    const length = document.getElementById('length').value;
    return generateRandomPassword(chars, length);
  }

  function getCharacterSet() {
    let chars = '';
    if (document.getElementById('uppercase').checked) chars += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    if (document.getElementById('lowercase').checked) chars += 'abcdefghijklmnopqrstuvwxyz';
    if (document.getElementById('numbers').checked) chars += '0123456789';
    if (document.getElementById('symbols').checked) chars += '!@#$%^&*()_+-=[]{}|;:,.<>?';
    return chars;
  }

  function generateRandomPassword(chars, length) {
    if (!chars) {
      alert('Please select at least one character set');
      return '';
    }
    let password = '';
    for (let i = 0; i < length; i++) {
      password += chars[Math.floor(Math.random() * chars.length)];
    }
    return password;
  }

  function generatePasswords() {
    const chars = getCharacterSet();
    if (!chars) return;

    if (currentMode === 'single') {
      document.getElementById('generatedPassword').value = generateSinglePassword();
    } else {
      const count = document.getElementById('batchCount').value;
      const length = document.getElementById('length').value;
      const passwords = [];
      for (let i = 0; i < count; i++) {
        passwords.push(generateRandomPassword(chars, length));
      }
      document.getElementById('batchPasswords').value = passwords.join('\n');
    }
  }

  function copyPassword() {
    const field = document.getElementById('generatedPassword');
    field.select();
    document.execCommand('copy');
    showCopyFeedback(field.nextElementSibling);
  }

  function copyBatchPasswords() {
    const field = document.getElementById('batchPasswords');
    field.select();
    document.execCommand('copy');
    showCopyFeedback(field.nextElementSibling);
  }

  function showCopyFeedback(button) {
    const originalText = button.textContent;
    button.textContent = 'Copied!';
    setTimeout(() => {
      button.textContent = originalText;
    }, 1000);
  }

  // Generate initial password
  generatePasswords();
</script>
{% endblock %}
